{"version":3,"sources":["webpack:////Users/jxnblk/repos/mdx-deck/packages/gatsby-theme/src/hooks/use-keyboard.js","webpack:////Users/jxnblk/repos/mdx-deck/packages/gatsby-theme/src/hooks/use-storage.js","webpack:////Users/jxnblk/repos/mdx-deck/packages/gatsby-theme/src/components/wrapper.js","webpack:////Users/jxnblk/repos/mdx-deck/packages/gatsby-theme/src/components/presenter-footer.js","webpack:////Users/jxnblk/repos/mdx-deck/packages/gatsby-theme/src/components/presenter.js","webpack:////Users/jxnblk/repos/mdx-deck/packages/gatsby-theme/src/components/slide-list.js","webpack:////Users/jxnblk/repos/mdx-deck/packages/gatsby-theme/src/components/overview.js","webpack:////Users/jxnblk/repos/mdx-deck/packages/gatsby-theme/src/components/grid.js","webpack:////Users/jxnblk/repos/mdx-deck/packages/gatsby-theme/src/components/deck.js","webpack:////Users/jxnblk/repos/mdx-deck/packages/gatsby-theme/src/templates/deck.js"],"names":["keys","toggleMode","next","state","mode","modes","normal","inputElements","use_keyboard","context","useDeck","useEffect","handleKeyDown","e","metaKey","ctrlKey","shiftKey","altKey","el","document","toLowerCase","keyCode","previous","navigate","slug","window","use_storage","_useState","useState","focused","setFocused","handleFocus","handleBlur","handleStorageChange","n","parseInt","newValue","isNaN","key","join","step","localStorage","index","DefaultProvider","props","React","children","components_wrapper","height","setHeight","_useDeck","theme","handleResize","stopTouch","_theme$Provider","Provider","wrapper_DefaultProvider","Object","index_esm","_extends","sx","width","variant","*","boxSizing","presenter_footer","length","react_default","a","Fragment","mx","href","globalHistory","rel","target","color","textDecoration","display","alignItems","timer","clock","presenter","_ref","slides","notes","flexDirection","justifyContent","fontFamily","bg","flex","p","components_zoom","zoom","ratio","components_slide","slide","preview","my","fontSize","fontWeight","fontVariantNumeric","noop","slide_list","_ref$slides","_ref$ratio","_ref$zoom","_ref$onClick","onClick","_objectWithoutPropertiesLoose","thumb","useRef","current","scrollIntoViewIfNeeded","map","i","slide_list_extends","role","ref","style","position","zIndex","m","cursor","outline","overview","minWidth","overflowY","WebkitOverflowScrolling","py","pr","grid","setState","minHeight","flexWrap","Keyboard","useKeyboard","Storage","useStorage","Print","_objectSpread","print","core_browser_esm","src_context","value","GoogleFont","_ref2","googleFont","Helmet","deck","_ref3","paths","_ref3$slides","_ref3$pageContext","pageContext","title","_ref3$theme","_ref3$themes","themes","outer","deck_objectWithoutPropertiesLoose","location","pathname","Number","head","_mergeThemes","_len","arguments","Array","_key","reduce","acc","merge","mergeThemes","components","mergedTheme","steps","get","Mode","_ref4","deck_GoogleFont","styles","body","margin","overflow","deck_Keyboard","deck_Storage","es","basepath","path","deck_Print","pageQuery","wrapper","splitSlides","deck_extends","__webpack_exports__","_ref$data$deck","data","id","templates_deck_objectWithoutPropertiesLoose","gatsby_plugin_mdx"],"mappings":"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","file":"component---packages-gatsby-theme-src-templates-deck-js-f751001d937eef726841.js","sourcesContent":["/* eslint-disable */\nimport { useEffect } from 'react'\nimport { navigate } from '@reach/router'\nimport useDeck from './use-deck'\nimport { modes } from '../constants'\nimport { previous, next } from '../navigate'\n\nconst keys = {\n  right: 39,\n  left: 37,\n  space: 32,\n  p: 80,\n  o: 79,\n  g: 71,\n  esc: 27,\n  pageUp: 33,\n  pageDown: 34,\n}\n\nconst toggleMode = next => state =>\n  state.mode === next\n    ? {\n        mode: modes.normal,\n      }\n    : {\n        mode: next,\n      }\n\nconst inputElements = ['input', 'select', 'textarea', 'a', 'button']\n\nexport const useKeyboard = () => {\n  const context = useDeck()\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      const { metaKey, ctrlKey, shiftKey, altKey } = e\n      if (metaKey || ctrlKey) return\n\n      // ignore custom keyboard shortcuts when elements are focused\n      const el = document.activeElement.tagName.toLowerCase()\n      if (inputElements.includes(el)) return\n\n      if (shiftKey) {\n        switch (e.keyCode) {\n          case keys.space:\n            previous(context)\n            break\n          case keys.p:\n            context.setState(toggleMode(modes.print))\n            navigate(`${context.slug}/print`)\n            break\n        }\n      } else if (altKey) {\n        switch (e.keyCode) {\n          case keys.p:\n            context.setState(toggleMode(modes.presenter))\n            break\n          case keys.o:\n            context.setState(toggleMode(modes.overview))\n            break\n          case keys.g:\n            context.setState(toggleMode(modes.grid))\n            break\n        }\n      } else {\n        switch (e.keyCode) {\n          case keys.right:\n          case keys.pageDown:\n          case keys.space:\n            next(context)\n            break\n          case keys.left:\n          case keys.pageUp:\n            previous(context)\n            break\n          case keys.esc:\n            context.setState({ mode: modes.normal })\n            break\n        }\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [context])\n}\n\nexport default useKeyboard\n","import { useEffect, useState } from 'react'\nimport { navigate } from '@reach/router'\nimport useDeck from './use-deck'\n\nconst keys = {\n  slide: 'mdx-deck-slide',\n  step: 'mdx-deck-step',\n}\n\nexport const useStorage = () => {\n  const context = useDeck()\n  const [focused, setFocused] = useState(false)\n\n  const handleFocus = () => setFocused(true)\n  const handleBlur = () => setFocused(false)\n\n  const handleStorageChange = e => {\n    const n = parseInt(e.newValue, 10)\n    // if (focused) return\n    if (isNaN(n)) return\n    switch (e.key) {\n      case keys.slide:\n        navigate([context.slug, n].join('/'))\n        break\n      case keys.step:\n        context.setState({ step: n })\n        break\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    setFocused(document.hasFocus())\n  }, [])\n\n  useEffect(() => {\n    if (!focused) window.addEventListener('storage', handleStorageChange)\n    window.addEventListener('focus', handleFocus)\n    window.addEventListener('blur', handleBlur)\n    return () => {\n      if (!focused) window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('focus', handleFocus)\n      window.removeEventListener('blur', handleBlur)\n    }\n  }, [focused])\n\n  // store changes\n  useEffect(() => {\n    if (!focused) return\n    localStorage.setItem(keys.slide, context.index)\n    localStorage.setItem(keys.step, context.step)\n  }, [focused, context.index, context.step])\n}\n\nexport default useStorage\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport React, { Fragment, useState, useEffect } from 'react'\nimport useDeck from '../hooks/use-deck'\nimport { modes } from '../constants'\n\nconst DefaultProvider = props =>\n  React.createElement(Fragment, null, props.children)\n\nexport default props => {\n  const [height, setHeight] = useState('100vh')\n  const { mode, theme } = useDeck()\n\n  useEffect(() => {\n    // handle mobile safari height\n    setHeight(window.innerHeight)\n    const handleResize = e => {\n      setHeight(window.innerHeight)\n    }\n    const stopTouch = e => {\n      if (mode !== modes.normal) return\n      e.preventDefault()\n    }\n    window.addEventListener('resize', handleResize)\n    document.body.addEventListener('touchstart', stopTouch)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n      document.body.removeEventListener('touchstart', stopTouch)\n    }\n  }, [mode])\n\n  const { Provider = DefaultProvider } = theme\n\n  return (\n    <Provider>\n      <div\n        {...props}\n        sx={{\n          width: '100vw',\n          height: mode !== modes.print ? height : '100vh',\n          variant: 'styles.root',\n          '*': {\n            boxSizing: 'border-box',\n          },\n        }}\n      />\n    </Provider>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport React from 'react'\nimport { globalHistory } from '@reach/router'\nimport useDeck from '../hooks/use-deck'\nimport Clock from './clock'\nimport Timer from './timer'\n\nexport default props => {\n  const context = useDeck()\n  const { index, length } = context\n\n  return (\n    <React.Fragment>\n      <div>\n        {index} / {length - 1}\n      </div>\n      <div\n        sx={{\n          mx: 4,\n        }}>\n        <a\n          href={globalHistory.location.href}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          sx={{\n            color: 'inherit',\n            textDecoration: 'none',\n          }}>\n          Open in New Window ↗︎\n        </a>\n      </div>\n      <div sx={{ mx: 'auto' }} />\n      <div\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          mx: 4,\n        }}>\n        <Timer />\n      </div>\n      <div>\n        <Clock />\n      </div>\n    </React.Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport React from 'react'\nimport Zoom from './zoom'\nimport Slide from './slide'\nimport useDeck from '../hooks/use-deck'\nimport Footer from './presenter-footer'\n\nexport const Presenter = ({ slides, children }) => {\n  const context = useDeck()\n  const next = slides[context.index + 1]\n  const notes = context.notes ? React.Children.toArray(context.notes) : false\n\n  return (\n    <div\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        height: '100vh',\n        fontFamily: 'ui',\n        color: 'white',\n        bg: 'black',\n      }}>\n      <div\n        sx={{\n          display: 'flex',\n          flex: '1 1 auto',\n          height: '60vh',\n        }}>\n        <div\n          sx={{\n            width: '75%',\n            p: 3,\n          }}>\n          <Zoom zoom={3 / 4}>{children}</Zoom>\n        </div>\n        <div\n          sx={{\n            width: '25%',\n            p: 3,\n          }}>\n          <Zoom ratio={4 / 3} zoom={1 / 4}>\n            <Slide slide={next} preview />\n          </Zoom>\n          {notes && (\n            <div\n              sx={{\n                my: 3,\n              }}>\n              {notes}\n            </div>\n          )}\n        </div>\n      </div>\n      <div\n        sx={{\n          height: 96,\n          p: 3,\n          display: 'flex',\n          alignItems: 'center',\n          fontSize: 1,\n          fontWeight: 'bold',\n          fontVariantNumeric: 'tabular-nums',\n        }}>\n        <Footer />\n      </div>\n    </div>\n  )\n}\n\nexport default Presenter\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport React, { useEffect, useRef } from 'react'\nimport Zoom from './zoom'\nimport Slide from './slide'\nimport useDeck from '../hooks/use-deck'\n\nconst noop = () => {}\n\nexport const SlideList = ({\n  slides = [],\n  ratio = 16 / 9,\n  zoom = 1 / 4,\n  onClick = noop,\n  ...props\n}) => {\n  const { index } = useDeck()\n  const thumb = useRef(null)\n\n  useEffect(() => {\n    const el = thumb.current\n    if (!el) return\n    if (typeof el.scrollIntoViewIfNeeded === 'function') {\n      el.scrollIntoViewIfNeeded()\n    }\n  })\n\n  return (\n    <React.Fragment>\n      {slides.map((slide, i) => (\n        <div\n          {...props}\n          key={i}\n          role=\"link\"\n          ref={i === index ? thumb : null}\n          onClick={e => {\n            onClick(i)\n          }}\n          style={\n            index === i\n              ? {\n                  position: 'relative',\n                  zIndex: 1,\n                }\n              : null\n          }\n          sx={{\n            m: 2,\n            cursor: 'pointer',\n            outline: index === i ? `4px solid cyan` : null,\n          }}>\n          <Zoom zoom={zoom} ratio={ratio}>\n            <Slide slide={slide} preview />\n          </Zoom>\n        </div>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default SlideList\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { navigate } from '@reach/router'\nimport useDeck from '../hooks/use-deck'\nimport Zoom from './zoom'\nimport SlideList from './slide-list'\n\nexport default ({ slides, children }) => {\n  const { slug, index, length } = useDeck()\n\n  return (\n    <div\n      sx={{\n        display: 'flex',\n        height: '100vh',\n        fontFamily: 'ui',\n        color: 'white',\n        bg: 'black',\n      }}>\n      <div\n        sx={{\n          width: 100 / 6 + '%',\n          minWidth: 0,\n          flex: 'none',\n          height: '100vh',\n          overflowY: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          p: 2,\n        }}>\n        <SlideList\n          slides={slides}\n          zoom={1 / 6}\n          onClick={i => {\n            navigate([slug, i].join('/'))\n          }}\n        />\n      </div>\n      <div\n        sx={{\n          width: 500 / 6 + '%',\n          py: 3,\n          pr: 3,\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100vh',\n        }}>\n        <div\n          sx={{\n            flex: '1 1 auto',\n          }}>\n          <Zoom zoom={5 / 6}>{children}</Zoom>\n        </div>\n        <div\n          sx={{\n            py: 3,\n          }}>\n          {index} / {length - 1}\n        </div>\n      </div>\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { navigate } from '@reach/router'\nimport useDeck from '../hooks/use-deck'\nimport { modes } from '../constants'\nimport SlideList from './slide-list'\n\nexport default ({ slides }) => {\n  const { slug, setState } = useDeck()\n  return (\n    <div\n      sx={{\n        minHeight: '100vh',\n        color: 'white',\n        bg: 'black',\n      }}>\n      <div\n        sx={{\n          display: 'flex',\n          flexWrap: 'wrap',\n        }}>\n        <SlideList\n          slides={slides}\n          onClick={i => {\n            navigate([slug, i].join('/'))\n            setState({ mode: modes.normal })\n          }}\n          sx={{\n            width: '25%',\n            m: 0,\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Router, globalHistory } from '@reach/router'\nimport { Global } from '@emotion/core'\nimport { ThemeProvider } from 'theme-ui'\nimport { Helmet } from 'react-helmet'\nimport get from 'lodash.get'\nimport merge from 'lodash.merge'\nimport useKeyboard from '../hooks/use-keyboard'\nimport useStorage from '../hooks/use-storage'\nimport useDeck from '../hooks/use-deck'\nimport Context from '../context'\nimport Wrapper from './wrapper'\nimport Slide from './slide'\nimport { modes } from '../constants'\n\nimport Presenter from './presenter'\nimport Overview from './overview'\nimport Grid from './grid'\n\nconst Keyboard = () => {\n  useKeyboard()\n  return false\n}\n\nconst Storage = () => {\n  useStorage()\n  return false\n}\n\nconst Print = ({ slides }) => {\n  const outer = useDeck()\n  const context = {\n    ...outer,\n    mode: modes.print,\n  }\n\n  return (\n    <Context.Provider value={context}>\n      {slides.map((slide, i) => (\n        <Slide key={i} slide={slide} preview />\n      ))}\n    </Context.Provider>\n  )\n}\n\nconst getIndex = () => {\n  const { pathname } = globalHistory.location\n  const paths = pathname.split('/')\n  const n = Number(paths[paths.length - 1])\n  const index = isNaN(n) ? 0 : n\n  return index\n}\n\nconst GoogleFont = ({ theme }) => {\n  if (!theme.googleFont) return false\n  return (\n    <Helmet>\n      <link rel=\"stylesheet\" href={theme.googleFont} />\n    </Helmet>\n  )\n}\n\nconst mergeThemes = (...themes) =>\n  themes.reduce(\n    (acc, theme) =>\n      typeof theme === 'function' ? theme(acc) : merge(acc, theme),\n    {}\n  )\n\nexport default ({\n  slides = [],\n  pageContext: { title, slug },\n  theme = {},\n  themes = [],\n  ...props\n}) => {\n  const outer = useDeck()\n  const index = getIndex()\n\n  const head = slides.head.children\n\n  const { components, ...mergedTheme } = mergeThemes(theme, ...themes)\n\n  const context = {\n    ...outer,\n    slug,\n    length: slides.length,\n    index,\n    steps: get(outer, `metadata.${index}.steps`),\n    notes: get(outer, `metadata.${index}.notes`),\n    theme: mergedTheme,\n  }\n\n  let Mode = ({ children }) => <React.Fragment children={children} />\n\n  switch (context.mode) {\n    case modes.presenter:\n      Mode = Presenter\n      break\n    case modes.overview:\n      Mode = Overview\n      break\n    case modes.grid:\n      Mode = Grid\n      break\n    default:\n      break\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n        {head}\n      </Helmet>\n      <GoogleFont theme={mergedTheme} />\n      <Context.Provider value={context}>\n        <ThemeProvider components={components} theme={mergedTheme}>\n          <Global\n            styles={{\n              body: {\n                margin: 0,\n                overflow: context.mode === modes.normal ? 'hidden' : null,\n              },\n            }}\n          />\n          <Keyboard />\n          <Storage />\n          <Wrapper>\n            <Mode slides={slides}>\n              <Router\n                basepath={slug}\n                style={{\n                  height: '100%',\n                }}>\n                <Slide index={0} path=\"/\" slide={slides[0]} />\n                {slides.map((slide, i) => (\n                  <Slide key={i} index={i} path={i + '/*'} slide={slide} />\n                ))}\n                <Print path=\"/print\" slides={slides} />\n              </Router>\n            </Mode>\n          </Wrapper>\n        </ThemeProvider>\n      </Context.Provider>\n    </>\n  )\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport Deck from '../components/deck'\nimport splitSlides from '../split-slides'\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    deck: deck(id: { eq: $id }) {\n      id\n      body\n    }\n  }\n`\n\nconst wrapper = props => {\n  const slides = splitSlides(props)\n  return <Deck {...props} slides={slides} />\n}\n\nconst components = {\n  wrapper,\n}\n\nexport default ({\n  data: {\n    deck: { id, body },\n  },\n  ...props\n}) => {\n  const Component = props => <MDXRenderer {...props} children={body} />\n\n  return <Component {...props} components={components} />\n}\n"],"sourceRoot":""}